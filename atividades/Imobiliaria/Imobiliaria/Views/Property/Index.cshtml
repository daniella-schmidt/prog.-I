@model List<Model.Property>
@using Model
@{
    ViewData["Title"] = "Propriedades";
}

<div class="container-fluid mt-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-0">
                        <i class="fas fa-home text-primary me-2"></i>
                        @ViewData["Title"]
                    </h2>
                    <p class="text-muted mb-0">Gerencie suas propriedades</p>
                </div>
                <div>
                    <span class="badge bg-secondary fs-6">
                        <i class="fas fa-chart-bar me-1"></i>
                        Total: @Model.Count()
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between mb-3">
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i>
            Nova Propriedade
        </a>
        <div class="btn-group ml-2">
            <button type="button" class="btn btn-success btn-sm dropdown-toggle" data-bs-toggle="dropdown">
                <i class="fas fa-download"></i> Exportar
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-action="ExportDelimitedFileWithSave">TXT Delimitado</a></li>
                <li><a class="dropdown-item" asp-action="ExportFixedFileWithSave">Formato Fixo</a></li>
            </ul>
        </div>
    </div>

    <!-- Filtros simplificados -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <span class="input-group-text">
                    <i class="fas fa-search"></i>
                </span>
                <input type="text" class="form-control" id="searchInput" placeholder="Buscar por nome, endereço ou ID...">
            </div>
        </div>
        <div class="col-md-6">
            <div class="d-flex justify-content-end">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-secondary" id="viewTable">
                        <i class="fas fa-table"></i>
                    </button>
                    <button type="button" class="btn btn-outline-secondary" id="viewCards">
                        <i class="fas fa-th-large"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm mb-4 border-0">
        <div class="card-header bg-white border-0">
            <ul class="nav nav-tabs card-header-tabs nav-justified">
                <li class="nav-item">
                    <a class="nav-link active" data-bs-toggle="tab" href="#filters">
                        <i class="fas fa-filter me-1"></i> Filtros
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#stats">
                        <i class="fas fa-chart-pie me-1"></i> Estatísticas
                    </a>
                </li>
            </ul>
        </div>
        <div class="card-body">
            <div class="tab-content">
                <!-- Aba de Filtros -->
                <div class="tab-pane fade show active" id="filters">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-tag"></i>
                                </span>
                                <select class="form-select" id="categoryFilter" onchange="filterByCategory(this.value)">
                                    <option value="">Todas Categorias</option>
                                    @foreach (var category in ViewBag.Categories as List<Category>)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="btn-group w-100">
                                <a asp-action="Index" class="btn btn-outline-primary">Todos</a>
                                <a asp-action="FilterByType" asp-route-forSale="true" class="btn btn-outline-primary">
                                    <i class="fas fa-dollar-sign me-1"></i> Venda
                                </a>
                                <a asp-action="FilterByType" asp-route-forSale="false" class="btn btn-outline-primary">
                                    <i class="fas fa-home me-1"></i> Aluguel
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Estatísticas -->
                <div class="tab-pane fade" id="stats">
                    <div class="row g-3">
                        @foreach (var stat in ViewBag.Statistics)
                        {
                            <div class="col-md-3">
                                <div class="card border-0 shadow-sm h-100">
                                    <div class="card-body text-center">
                                        <div class="align-content-md-center">
                                            @if (stat.Key.Contains("Venda"))
                                            {
                                                <i class="fas fa-dollar-sign text-primary" style="font-size: 1.5rem;"></i>
                                            }
                                            else if (stat.Key.Contains("Aluguel"))
                                            {
                                                <i class="fas fa-home text-primary" style="font-size: 1.5rem;"></i>
                                            }
                                            else if (stat.Key.Contains("Total"))
                                            {
                                                <i class="fas fa-building text-primary" style="font-size: 1.5rem;"></i>
                                            }
                                            else
                                            {
                                                <i class="fas fa-chart-line text-primary" style="font-size: 1.5rem;"></i>
                                            }
                                        </div>
                                        <h6 class="card-title mb-1 text-muted">@stat.Key</h6>
                                        <p class="card-text h4 fw-bold text-dark">@stat.Value</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Visualização em tabela -->
    <div id="tableView">
        <div class="card shadow-sm">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="propertiesTable">
                        <thead class="table-dark">
                            <tr>
                                <th scope="col">
                                    <i class="fas fa-hashtag me-1"></i>
                                    ID
                                </th>
                                <th scope="col">
                                    <i class="fas fa-home me-1"></i>
                                    Propriedade
                                </th>
                                <th scope="col">
                                    <i class="fas fa-tag me-1"></i>
                                    Categoria
                                </th>
                                <th scope="col">
                                    <i class="fas fa-map-marker-alt me-1"></i>
                                    Endereço
                                </th>
                                <th scope="col">
                                    <i class="fas fa-bed me-1"></i>
                                    Quartos
                                </th>
                                <th scope="col">
                                    <i class="fas fa-car me-1"></i>
                                    Vagas
                                </th>
                                <th scope="col">
                                    <i class="fas fa-bath me-1"></i>
                                    Banh.
                                </th>
                                <th scope="col">
                                    <i class="fas fa-dollar-sign me-1"></i>
                                    Valor
                                </th>
                                <th scope="col">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Status
                                </th>
                                <th scope="col" class="text-center">
                                    <i class="fas fa-cogs me-1"></i>
                                    Ações
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var property in Model)
                            {
                                <tr>
                                    <td class="fw-bold text-primary">#@property.Id</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <strong>@property.Name</strong>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-primary bg-opacity-10 text-primary">@property.Category?.Name</span>
                                    </td>
                                    <td>@property.Address?.GetShortAddress()</td>
                                    <td>@property.BedroomCount</td>
                                    <td>@property.GarageSpots</td>
                                    <td>@property.BathroomCount</td>
                                    <td class="fw-bold">@property.Price.ToString("C")</td>
                                    <td>
                                        @if (property.SoldOrRented)
                                        {
                                            <span class="badge bg-success">
                                                <i class="fas fa-check me-1"></i> @(property.ForSale ? "Vendida" : "Alugada")
                                            </span>
                                        }
                                        else if (property.InterestedClients?.Count > 0)
                                        {
                                            <span class="badge bg-warning">
                                                <i class="fas fa-users me-1"></i> @property.InterestedClients.Count
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">
                                                <i class="fas fa-home me-1"></i> Disponível
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@property.Id"
                                               class="btn btn-outline-info btn-sm"
                                               title="Ver Detalhes">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Update" asp-route-id="@property.Id"
                                               class="btn btn-outline-warning btn-sm"
                                               title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@property.Id"
                                               class="btn btn-outline-danger btn-sm"
                                               title="Excluir">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Visualização em cards -->
    <div id="cardView" style="display: none;">
        <div class="row">
            @foreach (var property in Model)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100 shadow-sm property-card">
                        <div class="card-header bg-primary text-white">
                            <div class="d-flex justify-content-between align-items-center">
                                <h6 class="mb-0">
                                    <i class="fas fa-home me-2"></i>
                                    @property.Name
                                </h6>
                                <span class="badge bg-light text-dark">#@property.Id</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <small class="text-muted">
                                    <i class="fas fa-tag me-1"></i>
                                    Categoria
                                </small>
                                <p class="mb-0">
                                    <span class="badge bg-primary bg-opacity-10 text-primary">@property.Category?.Name</span>
                                </p>
                            </div>
                            <div class="mb-3">
                                <small class="text-muted">
                                    <i class="fas fa-map-marker-alt me-1"></i>
                                    Endereço
                                </small>
                                <p class="mb-0">@property.Address?.GetShortAddress()</p>
                            </div>
                            <div class="row">
                                <div class="col-4">
                                    <small class="text-muted">
                                        <i class="fas fa-bed me-1"></i>
                                        Quartos
                                    </small>
                                    <p class="mb-0">@property.BedroomCount</p>
                                </div>
                                <div class="col-4">
                                    <small class="text-muted">
                                        <i class="fas fa-car me-1"></i>
                                        Vagas
                                    </small>
                                    <p class="mb-0">@property.GarageSpots</p>
                                </div>
                                <div class="col-4">
                                    <small class="text-muted">
                                        <i class="fas fa-bath me-1"></i>
                                        Banh.
                                    </small>
                                    <p class="mb-0">@property.BathroomCount</p>
                                </div>
                            </div>
                            <div class="mt-3">
                                <small class="text-muted">
                                    <i class="fas fa-dollar-sign me-1"></i>
                                    Valor
                                </small>
                                <p class="mb-0 fw-bold">@property.Price.ToString("C")</p>
                            </div>
                            <div class="mt-3">
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Status
                                </small>
                                <p class="mb-0">
                                    @if (property.SoldOrRented)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check me-1"></i> @(property.ForSale ? "Vendida" : "Alugada")
                                        </span>
                                    }
                                    else if (property.InterestedClients?.Count > 0)
                                    {
                                        <span class="badge bg-warning">
                                            <i class="fas fa-users me-1"></i> @property.InterestedClients.Count interesse(s)
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="fas fa-home me-1"></i> Disponível
                                        </span>
                                    }
                                </p>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="d-grid gap-2">
                                <div class="btn-group" role="group">
                                    <a asp-action="Details" asp-route-id="@property.Id"
                                       class="btn btn-info btn-sm">
                                        <i class="fas fa-eye me-1"></i>
                                        Detalhes
                                    </a>
                                    <a asp-action="Update" asp-route-id="@property.Id"
                                       class="btn btn-warning btn-sm">
                                        <i class="fas fa-edit me-1"></i>
                                        Editar
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@property.Id"
                                       class="btn btn-danger btn-sm">
                                        <i class="fas fa-trash me-1"></i>
                                        Excluir
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-home text-muted" style="font-size: 4rem;"></i>
            </div>
            <h4 class="text-muted mb-3">Nenhuma propriedade encontrada</h4>
            <p class="text-muted mb-4">Comece adicionando sua primeira propriedade</p>
            <a asp-action="Create" class="btn btn-primary btn-lg">
                <i class="fas fa-plus me-2"></i>
                Adicionar Primeira Propriedade
            </a>
        </div>
    }
</div>

<style>

    .property-card {
        transition: transform 0.2s ease-in-out;
    }

        .property-card:hover {
            transform: translateY(-2px);
        }

    .table th {
        border-top: none;
        font-weight: 600;
    }

    .btn-group .btn {
        border-radius: 0.375rem !important;
        margin-right: 2px;
    }

        .btn-group .btn:last-child {
            margin-right: 0;
        }

    .badge {
        padding: 0.35em 0.65em;
        font-size: 0.75em;
        font-weight: 600;
    }

    .nav-tabs .nav-link {
        transition: all 0.3s ease;
        border: none;
        color: #6c757d;
    }

        .nav-tabs .nav-link.active {
            color: #0d6efd;
            background-color: transparent;
            border-bottom: 2px solid #0d6efd;
        }

        .nav-tabs .nav-link:hover:not(.active) {
            color: #0d6efd;
            background-color: rgba(13, 110, 253, 0.05);
        }

    .icon-stat {
        width: 60px;
        height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<script>
        function filterByCategory(categoryId) {
        if (categoryId) {
            window.location.href = '@Url.Action("FilterByCategory", "Property")' + '?categoryId=' + categoryId;
        } else {
            window.location.href = '@Url.Action("Index", "Property")';
        }
    }
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const table = document.getElementById('propertiesTable');
        const tableRows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
        const cards = document.querySelectorAll('.property-card');
        const categoryFilter = document.getElementById('categoryFilter');

        searchInput.addEventListener('keyup', function() {
            const searchTerm = this.value.toLowerCase();

            for (let i = 0; i < tableRows.length; i++) {
                const row = tableRows[i];
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
            }

            cards.forEach(function(card) {
                const text = card.textContent.toLowerCase();
                card.parentElement.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        });

        const viewTable = document.getElementById('viewTable');
        const viewCards = document.getElementById('viewCards');
        const tableView = document.getElementById('tableView');
        const cardView = document.getElementById('cardView');

        viewTable.addEventListener('click', function() {
            tableView.style.display = 'block';
            cardView.style.display = 'none';
            viewTable.classList.add('active');
            viewCards.classList.remove('active');
        });

        viewCards.addEventListener('click', function() {
            tableView.style.display = 'none';
            cardView.style.display = 'block';
            viewCards.classList.add('active');
            viewTable.classList.remove('active');
        });

        viewTable.classList.add('active');

        categoryFilter.addEventListener('change', function() {
            const selectedCategory = this.value;

            if (!selectedCategory) {
                tableRows.forEach(row => row.style.display = '');
                cards.forEach(card => card.parentElement.style.display = '');
                return;
            }

            for (let i = 0; i < tableRows.length; i++) {
                const row = tableRows[i];
                const categoryCell = row.querySelector('td:nth-child(3)'); // 3rd column is category
                const categoryId = categoryCell.querySelector('span')?.textContent.trim();

                if (categoryId && categoryId === selectedCategory) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            }

            cards.forEach(function(card) {
                const categoryElement = card.querySelector('.card-body div:nth-child(1) p span');
                const categoryId = categoryElement?.textContent.trim();

                if (categoryId && categoryId === selectedCategory) {
                    card.parentElement.style.display = '';
                } else {
                    card.parentElement.style.display = 'none';
                }
            });
        });
    });
</script>